#include "includes/bullet.nvgt"
#include "includes/virus.nvgt"
#include "includes/globals.nvgt"
#include "dynamic_menu.nvgt"

dynamic_menu m;

void reset_game() {
    p.destroy_all();
    v.resize(0);
    bullets.resize(0); //just incase there are some bullets left
    lives=3;
    x=0;
    score=0;
    fired_shots=0;
    targets_hit=0;
    init_menu();
}

void init_menu() {
    m.reset(true); //We want the menu to reset each time this function is called else you'd have more than 1 item that will be duplicated.
    m.add_item_tts("Start");
    m.add_item_tts("Exit");
    m.wrap=false;
    m.enable_home_and_end=true;
    m.set_speech_mode(3);
    int r=m.run("Please choose an option", true);
    if (r==2 || r==0) {
        exit();
    }
    if (r==1) {
        game();
    }
}

void main() {
    show_window("Virus game");
    init_menu();
    p.pan_step=3.0;
}

void game() {
    sound ambience;
    ambience.load("sounds/ambience.wav");
    ambience.play_looped();
    timer spawn_timer;
    timer walktimer;
    int walktime=150;
    int spawn_time=random(3000,10000);
    while (true) {
        wait(5);
        p.update_listener_2d(x,0);
        if (key_pressed(KEY_ESCAPE)) {
            ambience.stop();
            reset_game();
        }
        if (spawn_timer.elapsed>=spawn_time) {
            spawn_virus();
            spawn_time=random(3000,10000);
            spawn_timer.restart();
        }
        bullet_loop();
        for (int i=0; i<v.length(); i++) {
            v[i].loop();
            if (v[i].y==0) {
                v[i].brake_snd=p.play_2d("sounds/glassBrake.wav",0,0,v[i].x,v[i].y,false,false);
                p.destroy_sound(v[i].snd);
                v.remove_at(i);
                lives-=1;
            }
        }
        if (key_down(KEY_RIGHT) and x<15 and walktimer.elapsed>=walktime) {
            x++;
            p.play_stationary("sounds/fs/"+random(1,5)+".wav",false);
            walktimer.restart();
        }
        if (key_down(KEY_LEFT) and x>0 and walktimer.elapsed>=walktime) {
            x--;
            p.play_stationary("sounds/fs/"+random(1,5)+".wav",false);
            walktimer.restart();
        }
        if (key_pressed(KEY_C)) {
            speak("Position: "+x);
        }
        if (key_pressed(KEY_UP)) {
            spawn_bullet(x,0);
            p.play_stationary("sounds/click.wav",false);
            fired_shots+=1;
        }
        if (key_pressed(KEY_S)) {
            speak("Your score is "+score);
        }
        if (key_pressed(KEY_L)) {
            speak(lives+" Lives remaining");
        }
        if (lives==0) {
            alert("Game over", "You managed to get A score of "+score);
            ambience.stop();
            reset_game();
        }
        if (key_pressed(KEY_A)) {
            speak("Accuracy: "+calculate_accuracy(fired_shots,targets_hit)+" percent");
        }
    }
}